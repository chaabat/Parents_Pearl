package com.parentsPearl.config;

import io.jsonwebtoken.security.Keys;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.crypto.SecretKey;
import java.security.SecureRandom;
import java.util.Base64;

@Configuration
public class JwtConfig {
    
    @Bean
    public SecretKey jwtSecretKey() {
        // Generate a secure random 256-bit (32-byte) key
        SecureRandom secureRandom = new SecureRandom();
        byte[] keyBytes = new byte[32];
        secureRandom.nextBytes(keyBytes);
        
        // Create a SecretKey using the generated bytes
        return Keys.hmacShaKeyFor(keyBytes);
    }
    
    @Bean
    public String jwtSecretString() {
        // For compatibility with existing code that expects a String secret
        return Base64.getEncoder().encodeToString(jwtSecretKey().getEncoded());
    }
} 